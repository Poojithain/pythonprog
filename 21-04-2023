today topics are:
Arrays List                      dictionaries
while                            set 
for                              error 
list comprehension                exception
string and operations
 
 
 
 
 differences:
 list                                                    array
 holds non-homogeneous elements                          homogenous elements
 can not perform arithmetic operations                   can perforn arithmetic operations
                                                         arr[[0,1,2],['a','b','c']]
                                                         arr[0]=[0,1,2]---> it results one d array
                                                         arr->[[],[],[]]--->3-d array  
                                                         arr-->[1,2,3]
                                                         arr points to the base address ehich is of zero th index
                                                         REPRESENTATION OF A 2-D ARRAY
                                                         arr=[[1,2,8],[8,3,2],[3,4,6]]
                                                         arr[0]=[1,2,8]
                                                         arr[1]=[8,3,2]
                                                       arr[2]=[3,4,6]
                                                         if now we want to acces the element 3 in arr[1]
                                                         then arr[1][1]=3
 ARRAYS:               |   
 arr=[1,2,3]           |  if we wnt to <class array>
 print(type(arr))      |   then we need to import array module like th egiven below
 o/p:<class list>      |   from array import *
                           arr= array('i',[10,20,30])
                            i.e, i=type code
                            
LIST FUNCTIONS:
---------------
list1=[1,2,3,8,9]

1) append()                   3)copy()
list1.append(10)               x=list1.copy()
o/p:list1=[1,2,3,8,9,10]       print(x) #['a',1,2]

2)clear()                     4)count()
list1.clear()                  list1.count('a')-> o/p:1
o/p:[]                         list1.count('2')-> o/p:0

5)pop()
list1=[1,2,3,45,55,'a']
pop

