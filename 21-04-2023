today topics are:
Arrays List                      dictionaries
while                            set 
for                              error 
list comprehension                exception
string and operations
 
 
 
 
 differences:
 list                                                    array
 holds non-homogeneous elements                          homogenous elements
 can not perform arithmetic operations                   can perforn arithmetic operations
                                                         arr[[0,1,2],['a','b','c']]
                                                         arr[0]=[0,1,2]---> it results one d array
                                                         arr->[[],[],[]]--->3-d array  
                                                         arr-->[1,2,3]
                                                         arr points to the base address ehich is of zero th index
                                                         REPRESENTATION OF A 2-D ARRAY
                                                         arr=[[1,2,8],[8,3,2],[3,4,6]]
                                                         arr[0]=[1,2,8]
                                                         arr[1]=[8,3,2]
                                                       arr[2]=[3,4,6]
                                                         if now we want to acces the element 3 in arr[1]
                                                         then arr[1][1]=3
 ARRAYS:               |   
 arr=[1,2,3]           |  if we wnt to <class array>
 print(type(arr))      |   then we need to import array module like th egiven below
 o/p:<class list>      |   from array import *
                           arr= array('i',[10,20,30])
                            i.e, i=type code
                            
LIST FUNCTIONS:
---------------
list1=[1,2,3,8,9]

1) append()                   3)copy()
list1.append(10)               x=list1.copy()
o/p:list1=[1,2,3,8,9,10]       print(x) #['a',1,2]

2)clear()                     4)count()
list1.clear()                  list1.count('a')-> o/p:1
o/p:[]                         list1.count('2')-> o/p:0

5)pop()
list1=[1,2,3,45,55,'a']
pop
print(list1.pop()) # pop method will remove the last element of list
print(list1.pop())
print(list1)

print(list1.pop(0))
print(list1)



list2 = [2,2,10,23,43]
print(list2)
list2.reverse()
print(list2)


list2.sort() # sort the list in increasing order
print(list2 , "this is the list after sorting")


list2.sort(reverse = True)
print(list2)


list3 = [1,2,2,3,4,5]
list3.remove(2)
print(list3)

EXCEPTION:                    errors:
it occurs at run time          errors occur at  compiile 
where as in python running compilig are done at the same time
exception arises dut to the syntax error
we can also say excwption is children of the error
1)ZeroDivisionError
------------------
try:
 x=1/0
except ZeroDivisionError:
 print("division by zero is not possible")
 1 case:
 ******
 try:                                                               |         
  x=1/0                                                             |
 except ImportERror:                                                |
  print("import error")       // when the esception arises it       |
                             wil look for rthe matching of the error| 
 except EOFError:                                                   |
  print("eof error")                                                |
 except ZeroDividonError:                                           |
  print("ZErodividon eroor") 
  
  
  2 case
  **********
   try:                                                               |
  x=1/0                                                             |
 except ImportERror:                                                |
  print("import error")      o/p: in this case tere no matched error which zero dividion error so here python comes into action and print inn the ouput that normal excution
 except EOFError:
  print("eof error")
  
  
  3 case:
  *******
  try:
   x=2/0
    print("inside try")
  except EOFError:
   print("end of file error ")
 except ImportError:                o/P: it will print nothing
  print("import ERror")
  else:
  print("Control will print inside th else")

finally block: finally will always get excuted
try:
 x=2/0
execept ZeroDivisionError as err:   o/p: division by Zero
 Print(err)                              in finally block
finally:
 print("in finally block")

RAISING EXCEPTION: (we can raise error intensionally by using 'raise keyword' )
-----------------
 arr=[1,2,3,4,5]
try:
 if len(arr)>=4:
  raise ValueError("array length is greater or equal to four")
